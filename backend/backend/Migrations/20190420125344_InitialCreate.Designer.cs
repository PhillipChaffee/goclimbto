// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.V1.Db;

namespace backend.Migrations
{
    [DbContext(typeof(ClimbContext))]
    [Migration("20190420125344_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085");

            modelBuilder.Entity("backend.V1.Models.Climb", b =>
                {
                    b.Property<int>("ClimbId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Grade");

                    b.Property<string>("ImageLocation");

                    b.Property<string>("Name");

                    b.Property<string>("Notes");

                    b.Property<decimal>("Rating");

                    b.HasKey("ClimbId");

                    b.ToTable("Climbs");
                });

            modelBuilder.Entity("backend.V1.Models.Coordinate", b =>
                {
                    b.Property<int>("CoordinateId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClimbId");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.HasKey("CoordinateId");

                    b.HasIndex("ClimbId")
                        .IsUnique();

                    b.ToTable("Coordinates");
                });

            modelBuilder.Entity("backend.V1.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<int>("ClimbId");

                    b.Property<string>("Country");

                    b.Property<string>("State");

                    b.HasKey("LocationId");

                    b.HasIndex("ClimbId")
                        .IsUnique();

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("backend.V1.Models.Coordinate", b =>
                {
                    b.HasOne("backend.V1.Models.Climb")
                        .WithOne("Coordinates")
                        .HasForeignKey("backend.V1.Models.Coordinate", "ClimbId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("backend.V1.Models.Location", b =>
                {
                    b.HasOne("backend.V1.Models.Climb")
                        .WithOne("Location")
                        .HasForeignKey("backend.V1.Models.Location", "ClimbId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
